{"version":3,"sources":["components/Clock/Clock.js","App.js","index.js"],"names":["Clock","state","date","Date","toLocaleTimeString","this","timerLog","setInterval","setState","console","log","prevProps","name","props","clearInterval","Component","App","isClockVisible","clockName","showClock","hideClock","makeRandomName","Math","floor","random","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,4MACIC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFvB,uDAKI,WAAqB,IAAD,OAClBC,KAAKC,SAAWC,aAAY,WAC1B,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAG7BK,QAAQC,IAAI,EAAKT,MAAMC,QAC1B,OAXT,gCAcI,SAAmBS,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAE5BH,QAAQC,IAAR,qCAA0CC,EAAUC,KAApD,eACFP,KAAKQ,MAAMD,SAlBrB,kCAsBI,WACEE,cAAcT,KAAKC,YAvBzB,oBA0BI,WACE,IAAQJ,EAASG,KAAKJ,MAAdC,KAER,OACE,8BACIA,OA/BZ,GAA2Ba,aCqDZC,G,kNAlDXf,MAAQ,CACNgB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKX,SAAS,CAAES,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKZ,SAAS,CAAES,gBAAgB,K,EAGlCI,eAAiB,WACf,EAAKb,SAAS,CAAEU,UAAWI,KAAKC,MAAsB,IAAhBD,KAAKE,a,4CAG7C,WACE,MAAsCnB,KAAKJ,MAAnCgB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,6BACE,2CACA,2CAEGD,GAAkB,kBAAC,EAAD,CAAOL,KAAMM,KAElC,4BACEO,KAAK,SACLC,QAASrB,KAAKc,WAFhB,QAMA,4BACEM,KAAK,SACLC,QAASrB,KAAKe,WAFhB,QAMA,4BACEK,KAAK,SACLC,QAASrB,KAAKgB,gBAFhB,wB,GAxCQN,cCDlBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.d40cd1ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends Component {\n    state = {\n      date: new Date().toLocaleTimeString(),\n    }\n\n    componentDidMount() {\n      this.timerLog = setInterval(() => {\n        this.setState({ date: new Date().toLocaleTimeString() });\n\n        // eslint-disable-next-line\n            console.log(this.state.date);\n      }, 1000);\n    }\n\n    componentDidUpdate(prevProps) {\n      if (prevProps.name !== this.props.name) {\n        // eslint-disable-next-line\n            console.log(`The Clock was renamed from ${prevProps.name} to ${\n          this.props.name}`);\n      }\n    }\n\n    componentWillUnmount() {\n      clearInterval(this.timerLog);\n    }\n\n    render() {\n      const { date } = this.state;\n\n      return (\n        <span>\n          { date }\n        </span>\n      );\n    }\n}\n\nClock.propTypes = {\n  name: PropTypes.number.isRequired,\n};\n","import React, { Component } from 'react';\nimport { Clock } from './components/Clock/Clock';\n\nimport './App.scss';\n\nclass App extends Component {\n    state = {\n      isClockVisible: true,\n      clockName: 0,\n    };\n\n    showClock = () => {\n      this.setState({ isClockVisible: true });\n    };\n\n    hideClock = () => {\n      this.setState({ isClockVisible: false });\n    };\n\n    makeRandomName = () => {\n      this.setState({ clockName: Math.floor(Math.random() * 1000) });\n    };\n\n    render() {\n      const { isClockVisible, clockName } = this.state;\n\n      return (\n        <div>\n          <h1>React clock</h1>\n          <p>\n            Current time:\n            {isClockVisible && <Clock name={clockName} />}\n          </p>\n          <button\n            type=\"button\"\n            onClick={this.showClock}\n          >\n            Show\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.hideClock}\n          >\n            Hide\n          </button>\n          <button\n            type=\"button\"\n            onClick={this.makeRandomName}\n          >\n            Set random name\n          </button>\n        </div>\n      );\n    }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}